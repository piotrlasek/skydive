-- ===========================================================================
-- pop-byStratum : after "pop-Base", finish populating table "Pyramid"
--     level by level (stratum by stratum) with aggreagted "boxes" (cells).
-- 
-- parke godfrey
-- 2017-04-04
-- ---------------------------------------------------------------------------
-- To run this from the command line for DB2:
-- % db2 -td! -f pop-Base
-- ===========================================================================

begin atomic

declare dim_      smallint default  2;
declare maxDepth_ smallint default 31;
declare stratum_  smallint;

set stratum_ = (select max(lev) from Pyramid);
while stratum_ > 0 do
    insert into Pyramid(lev, zoo, base, left, right, #point)
    with
        -- Select out all cells at level stratum_,
        -- add zoo ("up") for super-cell.
        SuperCell (lev, zoo, up, left, right, #point) as (
            select  lev, zoo,
                    zooAtLevel(dim_, maxDepth_, lev - 1, zoo),
                    left, right, #point
            from Pyramid
            where lev = stratum_
        ),
        -- REMOVED "rectify order by max" step.  DB2 does not need it.
        --     But other engines like PostgreSQL might.
        -- Aggregate by 'up'.
        AggrCell (lev, zoo, up, row#, left, right, #point) as (
            select  lev, zoo, up,
                    row_number() over (
                            partition by up
                            order by zoo asc),
                    min(left)   over (partition by up),
                    min(right)  over (partition by up),
                    sum(#point) over (partition by up)
            from SuperCell
        )
    -- Pick first row from each partition group to represent the super-cell.
    -- Pour into the stratum reserve.
    select  case
                when left > right then left
                else                   right
            end,     -- the level of this new tile
            zoo,     -- its zoo
            lev - 1, -- its base level, where this cell was created
            left,    -- touches left neighbour tile at this level
            right,   -- touches right neighbour tile at this level
            #point   -- aggregated number of points in new tile
    from AggrCell
    where row# = 1;

    set stratum_ = stratum_ - 1;

end while;

end!
