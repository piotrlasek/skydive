
with
        -- Select out all cells at level stratum_,
        -- add zoo ("up") for super-cell.
        SuperCell (lev, zoo, up, lft, rght, point) as (
            select  lev, zoo,
                    zooAtLevel(cast((dim_) as smallint), cast((maxDepth_) as smallint), cast((lev - 1)as
                    smallint), cast((zoo) as bigint)),
                    lft, rght, point
            from Pyramid
            where lev = stratum_
        ),
        -- REMOVED "rectify order by max" step.  DB2 does not need it.
        --     But other engines like PostgreSQL might.
        -- Aggregate by 'up'.
        AggrCell (lev, zoo, up, row, lft, rght, point) as (
            select  lev, zoo, up,
                    row_number() over (
                            partition by up
                            order by zoo asc),
                    min(lft)   over (partition by up),
                    min(rght)  over (partition by up),
                    sum(point) over (partition by up)
            from SuperCell
        )
    -- Pick first row from each partition group to represent the super-cell.
    -- Pour into the stratum reserve.
    select  case
                when lft > rght then lft
                else                   rght
            end,     -- the level of this new tile
            zoo,     -- its zoo
            lev - 1, -- its base level, where this cell was created
            lft,    -- touches lft neighbour tile at this level
            rght,   -- touches rght neighbour tile at this level
            point   -- aggregated number of points in new tile
    from AggrCell
    where row = 1;

